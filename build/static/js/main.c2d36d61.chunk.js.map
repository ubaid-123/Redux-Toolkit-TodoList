{"version":3,"sources":["store/CounterSlice.js","components/Counter.js","components/CounterDisplay.js","store/TodoSlice.js","components/TodoDisplay.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","counter","user","age","reducers","increment","state","decrement","incrementByValue","action","payload","updateName","actions","counterReducer","reducer","Counter","useState","value","setValue","setName","dispatch","useDispatch","useSelector","nameValue","onClick","type","onChange","e","target","Number","email","CounterDisplay","todoSlice","todos","id","title","isComplete","isDelete","addTodo","push","uuidv4","completedElements","map","obj","deletedElement","todoReducer","TodoDisplay","todoList","myList","completedItems","filter","item","notCompletedItems","setItem","filters","setFilters","console","log","style","textDecoration","checked","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c2d36d61.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst counterSlice = createSlice({\r\n    name : \"CounterSlice\",\r\n    initialState : {\r\n        counter : 0,\r\n        user : {\r\n            name : \"ubaid\",\r\n            age : 20\r\n        }\r\n    },\r\n    reducers : {\r\n        increment : (state) => {\r\n            state.counter += 1\r\n        },\r\n        decrement : (state) =>{\r\n            state.counter -= 1\r\n        },\r\n        incrementByValue : (state,action) => {\r\n            state.counter += action.payload\r\n        },\r\n        updateName: (state,action)=>{\r\n             state.user.name = action.payload.name;   \r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const { increment, decrement, incrementByValue, updateName } = counterSlice.actions; \r\nexport const counterReducer = counterSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { increment, incrementByValue, decrement, updateName } from '../store/CounterSlice';\r\n\r\n\r\n\r\nfunction Counter() {\r\n    const [value, setValue] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const counter = useSelector((state)=>{\r\n        return state.counterReducer.counter;\r\n    })\r\n    const nameValue = useSelector((state)=>{\r\n        return state.counterReducer.user.name;\r\n    })\r\n\r\n  return (\r\n    <div>\r\n        Value = {counter}\r\n        Name = {nameValue}\r\n        <div>\r\n            <button onClick={()=>{\r\n                dispatch(increment())\r\n            }}>Increment</button>\r\n        </div>\r\n        <div>\r\n            <button onClick={()=>{\r\n                dispatch(decrement())\r\n            }}>Decrement</button>\r\n        </div>\r\n        <div>\r\n            <input type=\"text\" onChange={(e)=>{\r\n                setValue(e.target.value)\r\n            }}/>\r\n            <button onClick={()=>{\r\n                dispatch(incrementByValue(Number(value)))\r\n            }}>Increment By Value</button>\r\n        </div>    \r\n        <div>\r\n            <input type=\"text\" onChange={(e)=>{\r\n                setName(e.target.value)\r\n            }}/>\r\n            <button onClick={()=>{\r\n                const user = {\r\n                    name : name,\r\n                    email : \"name@gmal.com\",\r\n                    age : 20\r\n                }\r\n\r\n                dispatch(updateName(user))\r\n            }}>Update Name</button>\r\n        </div>  \r\n\r\n          \r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import { useSelector } from \"react-redux\"\r\n\r\nfunction CounterDisplay() {\r\n  const counter = useSelector((state)=>{\r\n      return state.counterReducer.counter;\r\n  })  \r\n  return (\r\n      <div>\r\n\r\n          Counter = {counter} <br/> \r\n          Counter Display\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default CounterDisplay;\r\n  ","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst todoSlice = createSlice({\r\n    name : \"TodoSlice\",\r\n    initialState : {\r\n        todos : [{\r\n            id : 0,\r\n            title : \"\",\r\n            isComplete : false,\r\n            isDelete : false \r\n        }]\r\n    },\r\n    reducers:{\r\n        addTodo : (state,action)=>{\r\n              state.todos.push({id: uuidv4(), title: action.payload, isComplete: false, isDelete: false})\r\n        },\r\n        completedElements : (state,action)=>{\r\n            state.todos.map((obj)=>{\r\n                if(obj.id == action.payload)\r\n                    obj.isComplete = true\r\n            })\r\n        },\r\n        deletedElement : (state,action)=>{\r\n           state.todos.map((obj)=>{\r\n                if(obj.id == action.payload)\r\n                    obj.isDelete = true\r\n           })     \r\n        }\r\n    }\r\n}) \r\n\r\nexport const { addTodo, completedElements, deletedElement } = todoSlice.actions;\r\nexport const todoReducer = todoSlice.reducer;\r\n","\r\nimport { useSelector , useDispatch} from 'react-redux'\r\nimport { addTodo, completedElements, deletedElement } from '../store/TodoSlice'\r\nimport { useState } from 'react';\r\n\r\nexport const TodoDisplay = ()=>{\r\n    const dispatch = useDispatch();\r\n\r\n    const name = useSelector((state)=>{\r\n        return state.counterReducer.user.name;\r\n    })\r\n    const todoList = useSelector((state)=>{\r\n        return state.todoReducer.todos\r\n    })\r\n    const myList = todoList.map((obj) => obj);\r\n    \r\n    const completedItems = (\r\n        myList.filter(item => item.isComplete == true)\r\n    )\r\n\r\n    const notCompletedItems = (\r\n        myList.filter(item => item.isComplete == false)\r\n    )\r\n\r\n\r\n    const [item, setItem] = useState(\"\")\r\n    const [filters, setFilters] = useState(0)\r\n\r\n    return(\r\n        \r\n        <div> \r\n          { console.log(todoList)}\r\n          <h2>Todo List</h2>\r\n          <div>User Name {name}</div> \r\n          \r\n          <div>\r\n          {\r\n          (filters == 0)?(\r\n        <ul>\r\n            {\r\n               todoList.map((obj) => {\r\n                 if(obj.title != \"\"){\r\n                 return( \r\n                 <li style={(obj.isDelete == true)?{textDecoration:\"line-through\"}:{}}>\r\n                  { \r\n                     (obj.isDelete == false)?(\r\n                      <input type=\"checkbox\" checked={(obj.isComplete == true)?(true):(null)} onChange={() => dispatch(completedElements(obj.id))}/>\r\n                     ):(null)\r\n                    \r\n                  }\r\n                  &nbsp;\r\n                   {obj.title}\r\n                   &nbsp;\r\n                   {\r\n                     \r\n                     (obj.isComplete == false && obj.isDelete == false)?( \r\n                   <input type =\"button\" value=\"x\" onClick={()=> dispatch(deletedElement(obj.id))} />\r\n                     ):(null) \r\n                  }\r\n                 </li>\r\n                 )\r\n                 } })\r\n              \r\n            }\r\n           </ul>):(null)\r\n        }\r\n            {\r\n          (filters == 3)?(\r\n        <ul>\r\n            {\r\n               completedItems.map((obj) => {\r\n                if(obj.title != \"\"){\r\n                return( \r\n                 <li style={(obj.isDelete == true)?{textDecoration:\"line-through\"}:{}}>\r\n                   {obj.title}\r\n                 </li>\r\n                 )\r\n                 }\r\n              })\r\n              \r\n            }\r\n           </ul>):(null)\r\n        }\r\n              {\r\n          (filters == 2)?(\r\n        <ul>\r\n            {\r\n               notCompletedItems.map((obj) => {\r\n                if(obj.title != \"\" && obj.isDelete == false){\r\n                return( \r\n                 <li style={(obj.isDelete == true)?{textDecoration:\"line-through\"}:{}}>\r\n                   {obj.title}\r\n                 </li>\r\n                 )\r\n                }\r\n                })\r\n            }\r\n           </ul>):(null)\r\n        }\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"button\" value=\"All\"  onClick={()=> setFilters(0)}/> &nbsp;\r\n            <input type=\"button\" value=\"Active\" onClick={()=> setFilters(2)} /> &nbsp;\r\n            <input type=\"button\" value=\"Completed\" onClick={()=> setFilters(3)}/> &nbsp;\r\n            \r\n              <input type=\"text\" id=\"aa\" onChange={(e)=>{setItem(e.target.value)}}/>\r\n              <button onClick={()=>{\r\n                  dispatch(addTodo(item))\r\n                  document.getElementById('aa').value = ''  \r\n              }}>Add Item</button>\r\n          </div>\r\n\r\n      </div>\r\n    )\r\n}","import Counter from \"./components/Counter\";\nimport CounterDisplay from \"./components/CounterDisplay\";\nimport { TodoDisplay } from \"./components/TodoDisplay\";\n\nfunction App() {\n  return (\n    <div>\n        <Counter/>\n        <CounterDisplay/>\n        <br/><br/>\n        <TodoDisplay/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { counterReducer } from './CounterSlice';\r\nimport { todoReducer } from './TodoSlice';\r\n\r\nexport const store= configureStore({\r\n    reducer : {\r\n        counterReducer : counterReducer,\r\n        todoReducer : todoReducer \r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}